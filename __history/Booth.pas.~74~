unit Booth;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, NiceGrid, ComCtrls, StrUtils, Grids, Outline, DB,
  ADODB, ClipBrd,
  lhjModule, ImgList, RpDefine, RpRave;

type
  TFormBooth = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    TabSheet3: TTabSheet;
    TabSheet4: TTabSheet;
    LabelDate: TLabel;
    MonthCalendar1: TMonthCalendar;
    NiceGrid1: TNiceGrid;
    GroupBox1: TGroupBox;
    GroupBox2: TGroupBox;
    Label3: TLabel;
    Label4: TLabel;
    Label6: TLabel;
    Label5: TLabel;
    Edit1: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    Edit4: TEdit;
    GroupBox3: TGroupBox;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Edit5: TEdit;
    Edit6: TEdit;
    Edit7: TEdit;
    Edit8: TEdit;
    ButtonClear: TButton;
    ButtonTimeComp: TButton;
    ButtonSave: TButton;
    ButtonDelete: TButton;
    ButtonClose: TButton;
    Memo1: TMemo;
    GroupBox4: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    Label11: TLabel;
    Edit9: TEdit;
    Edit10: TEdit;
    ADOConnection1: TADOConnection;
    ADOQuery1: TADOQuery;
    DataSource1: TDataSource;
    ImageList2: TImageList;
    RvProject1: TRvProject;
    ButtonPrint1: TButton;
    procedure FormActivate(Sender: TObject);
    procedure MonthCalendar1Click(Sender: TObject);
    Function DateView(dDate:TDateTime): ansistring; // 날짜를 문자형으로변환
    procedure Grid_Init; // 그리드 초기화
    Procedure Text_Init; // 텍스트 박스 초기화
    Procedure Work_Booth(dDate:TDateTime); // 해당일의 부스 정보 조회
    Procedure YesterDayWork_Booth(dDate:TDateTime; sBooth1,sBooth2: Ansistring);
    procedure ButtonCloseClick(Sender: TObject);
    procedure ButtonClearClick(Sender: TObject);
    procedure ButtonDeleteClick(Sender: TObject);
    procedure ButtonTimeCompClick(Sender: TObject);   // 전일 부스 사용량 구하기
    function  BoothTime(BIndex: Integer; BCounter: double): Double;
    procedure Edit9KeyPress(Sender: TObject; var Key: Char);
    procedure Edit10KeyPress(Sender: TObject; var Key: Char);
    procedure Edit5KeyPress(Sender: TObject; var Key: Char);
    procedure Edit7KeyPress(Sender: TObject; var Key: Char);
    procedure ButtonSaveClick(Sender: TObject); // 시설가동시간 구하기
    Procedure DBParameter_Input;
    procedure ButtonPrint1Click(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;



var
  FormBooth: TFormBooth;
  FormSecurity: TFormBooth;

implementation

uses Security;

{$R *.dfm}

type
  TBooth = Record
    bDate : AnsiString;
    날씨  : AnsiString;
    온도  : Double;
    도장1 : Double;
    건조1 : Double;
    도장2 : Double;
    건조2 : Double;
    방지1 : Double;
    방지2 : Double;
    메모  : AnsiString;
  end;
var
  aDate,yy,mm,dd,ww : ansistring;
  const days: array[1..7] of string = ('일','월','화','수','목','금','토');

//==================================================================
// Name      : FormActivate(Sender: TObject)
// Desc      :
//==================================================================
procedure TFormBooth.FormActivate(Sender: TObject);
begin
  Grid_Init;  // 그리드 초기화
  Text_Init;
  MonthCalendar1.Date:= Now;   // 오늘날짜로 초기화
  LabelDate.Caption:=DateView(MonthCalendar1.Date);
  Work_Booth(MonthCalendar1.Date);  // 해당일의 부스 정보 조회
  //YesterDayWork_Booth;
end;


//==================================================================
// Name      : MonthCalendar1Click(Sender: TObject)
// Desc      : 달력 클릭시, 라벨을 해당 날짜로 바꾼다.
//==================================================================
procedure TFormBooth.MonthCalendar1Click(Sender: TObject);
var
  ToDate : AnsiString;
begin
  Text_Init;
  ToDate:=DateToStr(MonthCalendar1.Date);
  LabelDate.Caption:=DateView(MonthCalendar1.Date);
  Work_Booth(MonthCalendar1.Date);  // 해당일의 부스 정보 조회
  //YesterDayWork_Booth;
end;



//==================================================================
// Name      : DateView(dDate:TDateTime): ansistring
// Desc      : 날짜형을 년 월 일 요일로 표시
//==================================================================
Function TFormBooth.DateView(dDate:TDateTime): ansistring;
{var
  aDate,yy,mm,dd,ww : ansistring;
  const days: array[1..7] of string = ('일','월','화','수','목','금','토');
  }
begin
  aDate:=DatetoStr(dDate);
  yy:=ansiMidStr(aDate,1,4);
  mm:=ansiMidStr(aDate,6,2);
  dd:=ansiMidStr(aDate,9,2);
  ww:= days[DayOfWeek(dDate)];
  DateView:= yy + ' 년 '+mm+' 월 '+dd+' 일 '+ ww+ '요일' ;
end;

//==================================================================
// Name      : Edit10KeyPress
// Desc      : 온도 Tab -> 저장 버튼, enter -> editbox
//==================================================================
procedure TFormBooth.Edit10KeyPress(Sender: TObject; var Key: Char);
begin
  if Key=#9 then ButtonSave.SetFocus;
  if Key=#13 then Edit5.SetFocus;
end;
//==================================================================
// Name      : Edit5KeyPress
// Desc      : 1호기 적산 enter
//==================================================================
procedure TFormBooth.Edit5KeyPress(Sender: TObject; var Key: Char);
begin
  if Key=#13 then Edit7.SetFocus;
end;
//==================================================================
// Name      : Edit5KeyPress
// Desc      : 2호기 적산 enter
//==================================================================
procedure TFormBooth.Edit7KeyPress(Sender: TObject; var Key: Char);
begin
  if Key=#13 then ButtonTimeComp.SetFocus;
end;

//==================================================================
// Name      : Edit9KeyPress
// Desc      : 날씨 enter
//==================================================================
procedure TFormBooth.Edit9KeyPress(Sender: TObject; var Key: Char);
begin
  if Key=#13 then Edit10.SetFocus;
end;

//==================================================================
// Name      : Work_Booth(dDate:TDateTime)
// Desc      : 해당일의 부스 정보 조회
//==================================================================
Procedure TFormBooth.Work_Booth(dDate:TDateTime);
var
  aDate,yy,mm,dd : ansistring;
  Ssql: AnsiString;
  tmpStr1,tmpStr2: AnsiString;
  //ddDate:TDateTime;

begin
  aDate:=DatetoStr(dDate);
  //ddDate:=dDate;
  yy:=ansiMidStr(aDate,1,4);
  mm:=ansiMidStr(aDate,6,2);
  dd:=ansiMidStr(aDate,9,2);

  Ssql:='SELECT Date, 날씨, 온도, 도장1, 건조1, 도장2, 건조2, ' +
          ' 방지1, 방지2, 메모 From 부스 WHERE (부스.Date= #' + aDate + '# );';
  ADOQuery1.SQL.Clear;
  //ADOQuery1.SQL.Add(Ssql); // ADD함수를 사용하면 매우 느려진다.사용하지말자.
  ADOQuery1.SQL.Text:=(Ssql);
  ADOQuery1.Active:=True;

  if ADOQuery1.Recordset.RecordCount>0 then
   begin
    with ADOQuery1.Recordset.Fields do
     begin
      if Item[3].Value=Null then Edit1.Text:=''
          else Edit1.Text:=  FormatCurr('0.0;0;"0"',(Item[3].Value)); // 도장1
      if Item[4].Value=Null then Edit2.Text:=''
          else Edit2.Text:=  FormatCurr('0.0;0;"0"',(Item[4].Value)); // 건조1
      if Item[5].Value=Null then Edit3.Text:=''
          else Edit3.Text:=  FormatCurr('0.0;0;"0"',(Item[5].Value)); // 도장2
     if Item[6].Value=Null then Edit4.Text:=''
          else Edit4.Text:=  FormatCurr('0.0;0;"0"',(Item[6].Value)); // 건조2
      if Item[7].Value=Null then Edit5.Text:=''
          else Edit5.Text:=  VarToStr(Item[7].Value); // 방지1
      if Item[8].Value=Null then Edit7.Text:=''
          else Edit7.Text:=  VarToStr(Item[8].Value); // 방지2
      Edit6.Text:=  '';
      Edit8.Text:=  '';
      Edit9.Text:=  VarToStr(Item[1].Value); // 날씨
      Edit10.Text:= VarToStr(Item[2].Value); // 온도
      Memo1.Text:=  VarToStr(Item[9].Value); // 메모
     end;
    ADOQuery1.Active:=False;
    // 전일 부스 사용량 구하기
    tmpStr1:=VarToStr(Edit5.Text);
    tmpStr2:=VarToStr(Edit7.Text);
    if not((tmpStr1='') or (tmpStr2='')) then
                                    YesterDayWork_Booth(dDate,tmpStr1,tmpStr2);
    //showmessage  ( 'dDate, tmpstr1,2 = '+ Datetostr(ddate)+' '+tmpstr1+' '+tmpstr2);
   end
  else ADOQuery1.Active:=False;

end;

//==================================================================
// Name      : YesterDayWork_Booth
// Desc      : 전일 부스 사용량 구하기
//==================================================================
Procedure TFormBooth.YesterDayWork_Booth(dDate:TDateTime; sBooth1,sBooth2: Ansistring);

var
  i,j : integer;
  aDate,yy,mm,dd : ansistring;
  Ssql: AnsiString;
  BoothToDay, BoothYesterDay,BoothUsing : Array[0..1] of double;
  tmpString : Array[0..1] of AnsiString;

begin
  if MonthCalendar1.Date=NULL then aDate:=DateToStr(NOW)
                              else aDate:=DateToStr(MonthCalendar1.Date);
  aDate:=DateToStr(dDate);
  for i := 0 to 1 do begin
    BoothToDay[i]:=0;
    BoothYesterDay[i]:=0;
    tmpString[i]:='';
  end;
  BoothToDay[0]:=StrToFloat(sBooth1);
  BoothToDay[1]:=StrToFloat(sBooth2);

  //showmessage  ( 'aDate, sBooth1,2 = '+ adate+' '+sBooth1+' '+sBooth2);

  i:=0;
  repeat
    inc(i);
    // 전일이 일요일 또는 휴일이면 그 전날 적산량을 구함
    Ssql:='SELECT Date, 방지1, 방지2 From 부스 ' +
          ' WHERE (부스.Date= #' +  aDate + '# -' + IntToStr(i) + ' );';
    // showmessage ('Ssq; = ['+Ssql+']');
    ADOQuery1.SQL.Clear;
    ADOQuery1.SQL.Add(Ssql);
    ADOQuery1.Active:=True;
    if not(ADOQuery1.Recordset.BOF) then
    begin
      tmpString[0]:=varToStr(ADOQuery1.Recordset.Fields.Item[1].Value);
      tmpString[1]:=varToStr(ADOQuery1.Recordset.Fields.Item[2].Value);
      for j := 0 to 1 do begin
         if (tmpString[j]=NULL) or (tmpString[j]='') then tmpString[j]:='0';
      end;
      if (StrToFloat(tmpstring[0])>0) and (StrToFloat(tmpstring[1])>0) then
      begin
         for j := 0 to 1 do begin
            BoothYesterDay[j]:= StrToFloat(tmpstring[j]);
         end;
         ADOQuery1.Active:=False;
         Break;  // 반복문 강제 종료
      end
      else begin
         ADOQuery1.Active:=False;
         //
      end;
    end;
  until (i>30);

  for i := 0 to 1 do begin
    if BoothToDay[i]=0 then BoothYesterDay[i]:=0
    else begin
      BoothUsing[i]:=BoothToDay[i]-BoothYesterDay[i];
      if BoothUsing[i]< Myover then
        BoothUsing[i]:=MyMax - BoothYesterDay[i] + BoothToDay[i];
    end;
  end;
  // 전일 적산값과 동일한 값이면 0으로 처리 필요함
  if BoothUsing[0]<0 then Edit6.Text:=  '0'
   else Edit6.Text:=  FloatToStr(BoothUsing[0]);
  if BoothUsing[1]<0 then Edit8.Text:=  '0'
   else Edit8.Text:=  FloatToStr(BoothUsing[1]);

end;

//==================================================================
// Name      : Grid_Init
// Desc      : 그리드 초기화
//==================================================================
procedure TformBooth.Grid_Init;
begin
  with NiceGrid1 do begin    // NiceGrid1 제목 디자인
    headerline:=3;
    colcount:=13;
    columns[0].Title:='날짜';    columns[1].Title:='요일';
    columns[0].Width:=90;     columns[1].Width:=25;
    columns[2].Title:='날 씨';   columns[2].Width:=100;
    columns[3].Title:='온도;℃'; columns[3].Width:=30;
    columns[4].Title:='배출시설가동시간|1호기|도장';
     columns[4].Width:=40;
    columns[5].Title:='배출시설가동시간|1호기|건조';
     columns[5].Width:=40;
    columns[6].Title:='배출시설가동시간|2호기|도장';
     columns[6].Width:=40;
    columns[7].Title:='배출시설가동시간|2호기|건조';
     columns[7].Width:=40;
    columns[8].Title:= '방지시설전력사용량(KW)|1호기|적산';
     columns[8].Width:=50;
    columns[9].Title:= '방지시설전력사용량(KW)|1호기|사용량';
     columns[9].Width:=40;
    columns[10].Title:='방지시설전력사용량(KW)|2호기|적산';
     columns[10].Width:=50;
    columns[11].Title:='방지시설전력사용량(KW)|2호기|사용량';
     columns[11].Width:=40;
    columns[12].Title:='비   고';
     columns[12].Width:=100;
  end;
  nicegrid1.RowCount:=20;

end;
//==================================================================
// Name      : Text_Init
// Desc      : 텍스트 박스 초기화
//==================================================================
Procedure TFormBooth.Text_Init;
begin
  Edit1.Text:='';
  Edit2.Text:='';
  Edit3.Text:='';
  Edit4.Text:='';
  Edit5.Text:='';
  Edit6.Text:='';
  Edit7.Text:='';
  Edit8.Text:='';
  Edit9.Text:='';
  Edit10.Text:='';
  Memo1.Text:='';
end;

//==================================================================
// Name      : ButtonClearClick
// Desc      : Clear
//==================================================================
procedure TFormBooth.ButtonClearClick(Sender: TObject);
begin
  Grid_Init;  // 그리드 초기화
  Text_Init;
end;

//==================================================================
// Name      : ButtonCloseClick
// Desc      : 종료 , 창 닫기
//==================================================================
procedure TFormBooth.ButtonCloseClick(Sender: TObject);
begin
  ADOQuery1.Active:=False;
  close;
end;

//==================================================================
// Name      : ButtonDeleteClick
// Desc      : 삭제
//==================================================================
procedure TFormBooth.ButtonDeleteClick(Sender: TObject);
var
  yn : Integer;
  sSql : AnsiString;
  ToDay : AnsiString;
  FormSecurity:TFormSecurity;

begin
  ToDay:=DateToStr(MonthCalendar1.Date);
  // 삭제 여부 재확인
  yn:=MessageDlg('정말 삭제하겠습니까? 삭제한 자료는 복구가 안됩니다.'
                  ,mtInformation,mbOKCancel,0);   // OK : 1 , Cancel : 2
  if yn=1 then  begin
    FormSecurity:=TFormSecurity.Create(self);
    FormSecurity.ShowModal;
    if FormSecurity.EditPW.Text=pPW then ResultReturn:='OK'
                                    else ResultReturn:='FAIL';
    FormSecurity.Free;
    if ResultReturn='FAIL' then close;

    sSql := 'DELETE FROM 부스 WHERE Date = #' + ToDay + '#;';
 //clipboard.AsText:=ssql;
    try
      try
        ADOConnection1.BeginTrans;                     //트랜젝션 시작
        ADOQuery1.Close;
        ADOQuery1.SQL.Clear;                           //SQL문 삭제
        ADOQuery1.SQL.Text:=sSql;    //.Add 함수를 사용하면 매우 느려진다. 사용하지 말자.
        ADOQuery1.ExecSQL;                             //SQL 실행
        ADOConnection1.CommitTrans;                    //트랜젝션 적용
      except
        ADOConnection1.RollbackTrans;                 //트랜젝션 롤백
        //showmessage(' try exception 예외처리');    ///////////////////////////////////////
      end;
    finally
        //ADOQuery1.Open;
        ADOQuery1.Active:=False;
        //showmessage(' try finally 예외처리');       ///////////////////////////////////////
    end;
  end;
  Text_Init;
  Grid_Init;
end;


//==================================================================
// Name      : ButtonPrint1Click
// Desc      : 일지 출력 - Print
//==================================================================
procedure TFormBooth.ButtonPrint1Click(Sender: TObject);
var
  // BoothPage : TRavePage;
  i         : Integer;
  RaveProject : TRvProject;

begin
   RaveProject := TRvProject.Create((nil));
   RaveProject.ProjectFile:='.\SCM1-Booth1.rav';

  // 출력하기 전에 빈 Data가 있는지 체크

   with RaveProject do
   begin
    Open;
    SelectReport('Report1',False);
     // get the text from the Text1 component from the report
    SetParam('BYear',yy);

   end;
   //self.RvProject1.Execute;
   RvProject1.ExecuteReport('Report1');
   RvProject1.Close;


end;

//==================================================================
// Name      : ButtonSaveClick
// Desc      : 저장
//==================================================================
procedure TFormBooth.ButtonSaveClick(Sender: TObject);
var
  SaveBooth : TBooth;
  Ssql : AnsiString;
  aDate : AnsiString;
  myMessage : AnsiString;

begin
  SaveBooth.bDate:=DateToStr(MonthCalendar1.Date);
  SaveBooth.날씨:=IIFs( (length(edit9.Text) = 0) ,'',trim(edit9.Text));
  SaveBooth.온도:=StrToFloat(edit10.Text);
  SaveBooth.도장1:=StrToFloat(edit1.Text);
  SaveBooth.건조1:=StrToFloat(edit2.Text);
  SaveBooth.도장2:=StrToFloat(edit3.Text);
  SaveBooth.건조2:=StrToFloat(edit4.Text);
  SaveBooth.방지1:=StrToFloat(edit5.Text);
  SaveBooth.방지2:=StrToFloat(edit7.Text);
  SaveBooth.메모:=iifs( (LEngth(Memo1.Text)=0),'',trim(Memo1.Text));




  aDate:=DateToStr(MonthCalendar1.Date);




  Ssql:='SELECT Date, 날씨, 온도, 도장1, 건조1, 도장2, 건조2, 방지1, 방지2, ' +
        ' 메모 From 부스 WHERE (부스.Date= #' + aDate + '# );';
  ADOQuery1.SQL.Clear;
  ADOQuery1.SQL.Text:=(Ssql);
  ADOQuery1.Active:=True;
  if ADOQuery1.Eof then begin
   // insert
    try
      ADOConnection1.BeginTrans;                     //트랜젝션 시작
      Ssql:='INSERT INTO 부스 ' +
        '( [Date], 날씨, 온도, 도장1, 건조1, 도장2, 건조2, '+
        '방지1, 방지2, 메모 )' +
        ' Values ( ' +
        '#' + SaveBooth.bDate + '#, ' +
        MQ + SaveBooth.날씨 + MQ + ', ' +
        floattostr(SaveBooth.온도) + ', ' +
        floattostr(SaveBooth.도장1) + ', ' +
        floattostr(SaveBooth.건조1) + ', ' +
        floattostr(SaveBooth.도장2) + ', ' +
        floattostr(SaveBooth.건조2) + ', ' +
        floattostr(SaveBooth.방지1) + ', ' +
        floattostr(SaveBooth.방지2) + ', ' +
        MQ + SaveBooth.메모 + MQ + ') ; ';
      ADOQuery1.Close;
      ADOQuery1.SQL.Clear;
      ADOQuery1.SQL.Text:=sSql; //.Add 함수를 사용하면 매우 느려진다. 사용하지 말자.
      myMessage:=' 저장이 완료 되었습니다. ';
     except
        ADOConnection1.RollbackTrans;                 //트랜젝션 롤백
        ADOQuery1.Active:=False; // 예외 처리
     end;
   end
   else begin
   // update
    try      // ' + MQ + '
      ADOConnection1.BeginTrans;                     //트랜젝션 시작
      Ssql:='UPDATE 부스 SET ' +
        ' 부스.[Date] = #' + SaveBooth.bDate + '#, ' +
        '날씨 = ' + MQ + SaveBooth.날씨 + MQ + ', ' +
        '온도 = ' +  floattostr(SaveBooth.온도) + ', ' +
        '도장1 = ' + floattostr(SaveBooth.도장1) + ', ' +
        '건조1 = ' + floattostr(SaveBooth.건조1) + ', ' +
        '도장2 = ' + floattostr(SaveBooth.도장2) + ', ' +
        '건조2 = ' + floattostr(SaveBooth.건조2) + ', ' +
        '방지1 = ' + floattostr(SaveBooth.방지1) + ', ' +
        '방지2 = ' + floattostr(SaveBooth.방지2) + ', ' +
        '메모 = '+ MQ + SaveBooth.메모 + MQ + ' ' +
        ' Where 부스.[Date] = #' + SaveBooth.bDate + '# ; ';
      ADOQuery1.Close;
      ADOQuery1.SQL.Clear;
      ADOQuery1.SQL.Text:=sSql; //.Add 함수를 사용하면 매우 느려진다. 사용하지 말자.
      myMessage:=' 수정이 완료 되었습니다. ';
     except
        ADOConnection1.RollbackTrans;                 //트랜젝션 롤백
        ADOQuery1.Active:=False; // 예외 처리
     end;

   end; // if
 // showmessage (' ssql = ' + ssql+ '    ' );    clipboard.AsText:=ssql;
  ADOQuery1.ExecSQL;
  ADOConnection1.CommitTrans;                    //트랜젝션 적용
  ADOQuery1.Active:=False;
  ShowMessage (myMessage);

end;

//==================================================================
// Name      : DBParameter_Input
// Desc      : DB 추가 , 수정시 파라미터에 값 넣기
//==================================================================
Procedure TFormBooth.DBParameter_Input;
var
  SaveBooth : TBooth;

begin
  SaveBooth.bDate:=DateToStr(MonthCalendar1.Date);
  SaveBooth.날씨:=IIFs( (length(edit9.Text) = 0) ,'',trim(edit9.Text));
  SaveBooth.온도:=StrToFloat(edit10.Text);
  SaveBooth.도장1:=StrToFloat(edit1.Text);
  SaveBooth.건조1:=StrToFloat(edit2.Text);
  SaveBooth.도장2:=StrToFloat(edit3.Text);
  SaveBooth.건조2:=StrToFloat(edit4.Text);
  SaveBooth.방지1:=StrToFloat(edit5.Text);
  SaveBooth.방지2:=StrToFloat(edit7.Text);
  SaveBooth.메모:=iifs( (LEngth(Memo1.Text)=0),'',trim(Memo1.Text));

  with ADOQuery1.Parameters do
  begin
      ParamValues['N1'] :=SaveBooth.bDate;
      ParamValues['N2'] :=SaveBooth.날씨;
      ParamValues['N3'] :=SaveBooth.온도;
      ParamValues['N4'] :=SaveBooth.도장1;
      ParamValues['N5'] :=SaveBooth.건조1;
      ParamValues['N6'] :=SaveBooth.도장2;
      ParamValues['N7'] :=SaveBooth.건조2;
      ParamValues['N8'] :=SaveBooth.방지1;
      ParamValues['N9'] :=SaveBooth.방지2;
      ParamValues['N10']:=SaveBooth.메모;
  end;
end;

//==================================================================
// Name      : ButtonTimeCompClick
// Desc      : 가동 시간 계산
//==================================================================
procedure TFormBooth.ButtonTimeCompClick(Sender: TObject);
var
  dBooth1,dBooth2,ddd: Double;
  Ssql: AnsiString;
  ToDay : TDateTime;
  tmpStr1,tmpStr2 : AnsiString;

begin
  ToDay:=(MonthCalendar1.Date);
  tmpStr1:=edit5.Text;
  tmpStr2:=edit7.Text;

  if (tmpStr1<>'') and (tmpStr2<>'') then  begin
     YesterDayWork_Booth(ToDay,tmpStr1,tmpStr2);
    if edit6.Text='' then dBooth1:=0 else dBooth1:=StrToFloat(edit6.Text);
    if edit8.Text='' then dBooth2:=0 else dBooth2:=StrToFloat(edit8.Text);
    edit1.Text:= FormatCurr('0.0;0;"0"',BoothTime(1, dBooth1)); // 1번 부스 도장
    edit2.Text:= FormatCurr('0.0;0;"0"',BoothTime(2, dBooth1)); // 1번 부스 건조
    edit3.Text:= FormatCurr('0.0;0;"0"',BoothTime(1, dBooth2)); // 2번 부스 도장
    edit4.Text:= FormatCurr('0.0;0;"0"',BoothTime(2, dBooth2)); // 2번 부스 건조
  end;
  ButtonSave.SetFocus;
end;

//==================================================================
// Name      : BoothTime(var BIndex: Integer; var BCounter: double): Double;
// Desc      : 배출시설 가동시간 임의 계산(핵심!!!)
//==================================================================
function TFormBooth.BoothTime(BIndex: Integer; BCounter: double): Double;
var
  i,k : Integer;
  WorkingTime, WorkingTime3: array[0..11] of Double;

begin

  case BIndex of
   1: begin
      k:=6;   // 도장
      for i := 0 to k+1 do begin
        WorKingTime[i]:=WorkingTime1[i];
        WorkingTime3[i]:=i*0.5;
      end;
   end;
   2: begin
      k:=10;  // 건조
      for i := 0 to k+1 do begin
        WorKingTime[i]:=WorkingTime2[i];
        WorkingTime3[i]:=i*0.5;
      end;
   end;
  end;

  i:=0;
  while (i<k) do begin
    if (WorkingTime[i] <= BCounter) And (BCounter < WorkingTime[i+1]) then Break;
    inc(i);
  end;
  result:= WorkingTime3[i];

end;




end.
